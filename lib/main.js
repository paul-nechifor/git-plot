// Generated by CoffeeScript 1.7.1
var GitSearch, fs, getCsvResults, getResults, main, optimist;

fs = require('fs');

optimist = require('optimist');

GitSearch = require('./GitSearch');

main = function() {
  var argv, search;
  argv = optimist.usage('Usage: $0 [-s <searchDir>]')["default"]('s', '/home').alias('s', 'searchDir').describe('s', 'Where to search for `.git` dirs.')["default"]('a', '.*').alias('a', 'authorRegex').describe('a', 'Regex for filtering author names.')["default"]('e', '.*').alias('e', 'emailRegex').describe('e', 'Regex for filtering author email addresses.')["default"]('f', 'date,message,added,deleted').alias('f', 'fields').describe('f', "Fields to be included in the output. Must be separated by " + "commas. All are included if it's \"\".")["default"]('t', 'csv').alias('t', 'outputType').describe('t', 'The format of the output. Either "json" or "csv".').alias('o', 'output').describe('o', 'Output file. Standard output is used if not specified.').alias('h', 'help').describe('h', 'Print this help message.').argv;
  if (argv.h) {
    optimist.showHelp();
    process.exit();
  }
  search = new GitSearch;
  if (argv.searchDir) {
    search.searchDir = argv.searchDir;
  }
  if (argv.authorRegex) {
    search.authorRegex = new RegExp(argv.authorRegex);
  }
  if (argv.emailRegex) {
    search.emailRegex = new RegExp(argv.emailRegex);
  }
  if (typeof argv.fields === 'string') {
    search.fields = argv.fields.split(',');
  }
  return search.search(function(err) {
    if (err) {
      throw err;
    }
    return getResults(search, argv, function(err, output) {
      if (err) {
        throw err;
      }
      if (argv.output) {
        return fs.writeFileSync(argv.output, output);
      } else {
        return console.log(output);
      }
    });
  });
};

getResults = function(search, argv, cb) {
  var json;
  if (argv.outputType === 'json') {
    json = JSON.stringify(search.commits, null, '  ');
    return cb(null, json);
  } else if (argv.outputType === 'csv') {
    return getCsvResults(search, cb);
  } else {
    return cb('Unknown output type.');
  }
};

getCsvResults = function(search, cb) {
  var json2csv, opts;
  json2csv = require('json2csv');
  opts = {
    data: search.commits,
    fields: search.fields
  };
  return json2csv(opts, function(err, csv) {
    if (err) {
      return cb(err);
    }
    return cb(null, csv);
  });
};

module.exports = main;
